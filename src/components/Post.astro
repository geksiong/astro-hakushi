---
import Icon from "astro-icon";

import FormattedDate from "@components/FormattedDate.astro";
import TableOfContents from '@components/TableOfContents.astro';

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props.frontmatter;
const prevPost = Astro.props.prev;
const nextPost = Astro.props.next;
const headings = Astro.props.headings;
const minutesRead = Astro.props.remarkPluginFrontmatter?.minutesRead;
const wordCount = Astro.props.remarkPluginFrontmatter?.wordCount;
---

<article class="prose pb-8">
  <h1>{title}</h1>
  <div>
    <FormattedDate date={pubDate} /> { minutesRead && <span> / {wordCount} ({minutesRead})}</span>
  </div>
  <div class="flex items-center pb-8">
    <Icon name="mdi:tag" height="1em" />
    <span class="inline-block">
      {
        tags.map((tag: any) => (
          <a href=`/demo/tags/${tag}` class="pl-2">
            {tag}
          </a>
        ))
      }
    </span>
  </div>

  <TableOfContents headings={headings} />

  <slot />
</article>
<ul class="flex">
  { prevPost &&
    <li class="flex-grow basis-1/2">
      <a href=`../${prevPost.slug}/` class="flex items-center">
        <Icon name="ri:arrow-left-line" height="1.5em" class="" />
        <span>
          <FormattedDate date={prevPost.data.pubDate} /><br />{prevPost.data.title}
        </span>
      </a>
    </li>
  }
  { nextPost &&
    <li class="flex-grow basis-1/2 text-right">
      <a href=`../${nextPost.slug}/` class="flex items-center">
        <span class="flex-grow">
          <FormattedDate date={nextPost.data.pubDate} /><br />{nextPost.data.title}
        </span>
        <Icon name="ri:arrow-right-line" height="1.5em" class="" />
      </a>
    </li>
  }
</ul>
